version: "3.7"
# chcp.com 437
services:
  pg_db:
    container_name: pg_db
    image: postgres:12.1-alpine    
    volumes:
       - postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: blog      
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

# # #  ############ PGADMIN ###################

  pg_admin:
    container_name: pg_admin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - postgres
    restart: unless-stopped
    logging:
      driver: none

  # ####### API ################################
  db_api: 
    container_name: db_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg_db/{}
      - BLOG_NAME=blog
    build: db_api/src
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port ${API_PORT} --log-level 'info'
    volumes:
      - ./db_api/src/:/usr/src/
    ports:
      - "0.0.0.0:${API_PORT}:${API_PORT}" 
    networks:
      - postgres
      - api2api
    restart: unless-stopped 
    depends_on:
      - pg_db

     

# ############### Main CLT endpoint for recieving messages and handling them as such  ##################
  blog_app: 
    container_name: blog_app
    build: blog_quart/src
    # command: hypercorn app.main:blog_app --reload --workers 1 --log-level 'info'
    environment:
      - API_URL=http://db_api:${API_PORT}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASS=${ADMIN_PASS}
    volumes:
      - .blog_quart/src:/usr/src/app/
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - api2api
    restart: unless-stopped
    depends_on:
      - db_api
      - pg_db

  


# # ######## NETWORK #############
networks:
  postgres:
    driver: bridge
  api2api:
    driver: bridge
# # ###### VOLUMES #############
volumes:
    postgres:
    pgadmin: